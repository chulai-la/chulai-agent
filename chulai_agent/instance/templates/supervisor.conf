[program:{{ instance.instance_id }}]
autostart=False
startsec={{ instance.start_sec }}
stopwaitsecs={{ instance.stop_sec }}
{% macro show_cmd(worker) %}{% include "cmds/" + worker %}{% endmacro %}
command=docker run
    -h {{ agent.host_name }}.{{ agent.paas_domain }}
    --label={{ instance.instance_id }}
    --rm=true
    --memory-swap=-1
    -m {{ instance.memory_limit }}m
    {%- if instance.port %}
    -p {{ agent.host_ip }}:{{ instance.port }}:{{ instance.port }}
    {% endif -%}
    -v {{ instance.logs_dir }}:{{ instance.work_dir }}/log
    -v {{ instance.assets_dir }}:{{ instance.work_dir }}/public/assets
    {%- for env_name, env_val in instance.environments.items() %}
    -e {{ "%r=%r"|format(env_name, env_val) }}
    {%- endfor %}
    {{ instance.image_tag }}
    {{ show_cmd(instance.worker)|indent(4) }}

stdout_logfile={{ instance.stdlogs_dir }}/stdout.log
stdout_logfile_maxbytes={{ agent.log_max_mb }}MB
stdout_logfile_backups={{ agent.log_backups }}

stderr_logfile={{ instance.stdlogs_dir }}/stderr.log
stderr_logfile_maxbytes={{ agent.log_max_mb}}MB
stderr_logfile_backups={{ agent.log_backups }}

[chulai:{{ instance.instance_id }}]
image-tag={{ instance.image_tag }}
app-id={{ instance.app_id }}
commit={{ instance.commit }}
start_sec={{ instance.start_sec }}
stop_sec={{ instance.stop_sec }}
memory_limit={{ instance.memory_limit }}
port={{ instance.port }}
envs={{ instance.environments_json }}
